CREATE TABLE laptop_subscriptions (
	userID INT NOT NULL,
	laptopID INT NOT NULL,
	PRIMARY KEY(userID, laptopID),
	FOREIGN KEY (userID) REFERENCES user(id),
	FOREIGN KEY (laptopID) REFERENCES laptops(id)	
);

#####################################################################


CREATE TABLE mobile_subscriptions (
	userID INT NOT NULL,
	mobileID INT NOT NULL,
	PRIMARY KEY(userID, mobileID),
	FOREIGN KEY (userID) REFERENCES user(id),
	FOREIGN KEY (mobileID) REFERENCES mobiles(id)	
);

#####################################################################


DELIMITER $$
USE `Linder`$$
CREATE PROCEDURE `sp_addLaptopSubscription` (
IN USERIDIN INT,
IN LAPTOPIDIN INT
)
BEGIN
    insert into laptop_subscriptions values (USERIDIN, LAPTOPIDIN);
END$$
DELIMITER ;

#####################################################################


DELIMITER $$
USE `Linder`$$
CREATE PROCEDURE `sp_addMobileSubscription` (
IN USERIDIN INT,
IN MOBILEIDIN INT
)
BEGIN
    insert into mobile_subscriptions values (USERIDIN, MOBILEIDIN);
END$$
DELIMITER ;

#####################################################################

DELIMITER $$
USE `Linder`$$
CREATE PROCEDURE `sp_getSubsriptionsByLaptopID` (
IN LAPTOPIDIN INT
)
BEGIN
    select userID from laptop_subscriptions where laptopID=LAPTOPIDIN;
END$$
DELIMITER ;


#####################################################################

DELIMITER $$
USE `Linder`$$
CREATE PROCEDURE `sp_getSubsriptionsByMobileID` (
IN MobileIDIN INT
)
BEGIN
    select userID from mobile_subscriptions where mobileID=MobileIDIN;
END$$
DELIMITER ;


#####################################################################


DELIMITER $$
USE `Linder`$$
DROP PROCEDURE IF EXISTS sp_deleteLaptopSubscription;
CREATE PROCEDURE `sp_deleteLaptopSubscription` (
IN LAPTOPIDIN INT
)
BEGIN
     DELETE FROM laptop_subscriptions WHERE laptopIDIN=laptopID;
END$$
DELIMITER ;


#####################################################################


DELIMITER $$
USE `Linder`$$
DROP procedure IF EXISTS sp_deleteMobileSubscription;
DROP PROCEDURE IF EXISTS sp_deleteMobileSubscription;
CREATE PROCEDURE `sp_deleteMobileSubscription` (
IN MOBILEIDIN INT
)
BEGIN
     DELETE FROM mobile_subscriptions WHERE mobileIDIN=mobileID;
END$$
DELIMITER ;

#####################################################################

DELIMITER $$
USE `Linder`$$
CREATE PROCEDURE `sp_updateLaptop` (
IN p_laptop_id int,
IN p_user_id int(11)
IN p_laptop_model text,
IN p_laptop_processor text,
IN p_laptop_ram int(10),
IN p_laptop_storage int(10),
IN p_laptopccondition text,
IN p_laptop_price int(10),
IN p_laptop_extra_info text
)
BEGIN
     UPDATE Laptops SET owner=p_user_id, 
	model=p_laptop_model, 
	processor=p_laptop_processor, 
	ram=p_laptop_ram, 
	storage=p_laptop_storage, 
	laptopcondition=p_laptopcondition, 
	price=p_laptop_price, 
	additional=p_laptop_extra_info  
	WHERE p_laptop_id=id;
END$$
DELIMITER ;

#####################################################################

DELIMITER $$
USE `Linder`$$
CREATE PROCEDURE `sp_updateMobile` (
IN p_mobile_id int,
IN p_user_id int(11),
IN p_mobile_model text,
IN p_mobile_processor text,
IN p_mobile_ram int(10),
IN p_mobile_storage int(10),
IN p_mobilecondition text,
IN p_mobile_price int(10),
IN p_mobile_extra_info text
)
BEGIN
     UPDATE Mobiles SET 
	owner=p_user_id, 
	model=p_mobile_model, 
	processor=p_mobile_processor, 
	ram=p_mobile_ram, 
	storage=p_mobile_storage, 
	laptopcondition=p_mobilecondition, 
	price=p_mobile_price, 
	additional=p_mobile_extra_info  
	WHERE p_mobile_id=id;
END$$
DELIMITER ;

######################################################################

DELIMITER $$
USE `Linder`$$
CREATE PROCEDURE `sp_deleteMobile` (
IN p_mobile_id int
)
BEGIN
	DELETE FROM mobile_subscriptions WHERE p_mobile_id=mobileID;
END$$
DELIMITER ;

######################################################################
DELIMITER $$
DELIMITER $$
USE `Linder`$$
DROP procedure IF EXISTS sp_deleteLaptop;
CREATE PROCEDURE `sp_deleteLaptop` (
IN p_laptop_id int
)
BEGIN
	DELETE FROM laptops WHERE p_laptop_id=ID;
END$$
DELIMITER ;

######################################################################

DELIMITER $$
USE `Linder`$$
DROP procedure IF EXISTS sp_getLaptopRecommendation;
CREATE PROCEDURE `sp_getLaptopRecommendation` (
IN p_user_id int
)
BEGIN
	CREATE TEMPORARY TABLE tempTable as(
        	select *, (
 		    select COUNT(*)
		    FROM laptop_subscriptions
		    GROUP BY laptopID
		    HAVING laptop_subscriptions.laptopID=id
		) as priority
       		from laptops
		where owner!=p_user_id
    	);
	select * from tempTable 
        order by priority DESC;
        DROP TEMPORARY TABLE tempTable;
END$$
DELIMITER ;

######################################################################

DELIMITER $$
USE `Linder`$$
DROP procedure IF EXISTS sp_getMobileRecommendation;
CREATE PROCEDURE `sp_getMobileRecommendation` (
IN p_user_id int
)
BEGIN
	CREATE TEMPORARY TABLE tempTable as(
        	select *, (
 		    select COUNT(*)
		    FROM mobile_subscriptions
		    GROUP BY mobileID
		    HAVING mobile_subscriptions.mobileID=id
		) as priority
       		from mobiles
		where owner!=p_user_id
    	);
	select * from tempTable 
        order by priority DESC;
        DROP TEMPORARY TABLE tempTable;
END$$
DELIMITER ;

######################################################################


DELIMITER $$
USE `Linder`$$
DROP procedure IF EXISTS sp_getSubscribedUsersMobile;
CREATE PROCEDURE `sp_getSubscribedUsersMobile` (
IN p_dev_id int
)
BEGIN
	select A.email
	from (select * from mobile_subscriptions, user
          where user.id=mobile_subscriptions.userid) as A
    where A.mobileID = p_dev_id;
END$$
DELIMITER ;


######################################################################


DELIMITER $$
USE `Linder`$$
DROP PROCEDURE IF EXISTS sp_deleteMobile;
CREATE PROCEDURE `sp_deleteMobile` (
IN MOBILEIDIN INT
)
BEGIN
     DELETE FROM mobiles WHERE MOBILEIDIN=ID;
END$$
DELIMITER ;

######################################################################

DELIMITER $$
USE `Linder`$$
DROP procedure IF EXISTS sp_getSubscribedUsersLaptop;
CREATE PROCEDURE `sp_getSubscribedUsersLaptop` (
IN p_dev_id int
)
BEGIN
	select A.email
	from (select * from laptop_subscriptions, user
          where user.id=laptop_subscriptions.userid) as A
    where A.laptopID = p_dev_id;
END$$
DELIMITER ;
